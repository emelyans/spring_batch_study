<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/batch
            http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

    <!-- Job Launcher -->
    <bean id="transactionManager"
          class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>


    <!-- Listeners -->
    <bean id="jobListenerInterface" class="com.test.sbt.job.JobListenerInterface"/>

    <bean id="jobListenerAnnotations" class="com.test.sbt.job.JobListenerAnnotations"/>

    <bean id="stepListenerInterface" class="com.test.sbt.job.step.StepExecutionListenerInterface"/>

    <bean id="stepListenerAnnotations" class="com.test.sbt.job.step.StepExecutionListenerAnnotations"/>

    <bean id="chunkListenerInterface" class="com.test.sbt.job.chunk.ChunkListenerInterface"/>

    <bean id="chunkListenerAnnotations" class="com.test.sbt.job.chunk.ChunkListenerAnnotations"/>

    <bean id="itemReadListenerInterface" class="com.test.sbt.job.reader.ItemReadListenerInterface"/>

    <bean id="itemReadListenerAnnotations" class="com.test.sbt.job.reader.ItemReadListenerAnnotations"/>

    <bean id="itemProcessListenerInterface" class="com.test.sbt.job.processor.ItemProcessListenerInterface"/>

    <bean id="itemProcessListenerAnnotations" class="com.test.sbt.job.processor.ItemProcessListenerAnnotations"/>

    <bean id="itemWriteListenerInterface" class="com.test.sbt.job.writer.ItemWriteListenerInterface"/>

    <bean id="itemWriteListenerAnnotations" class="com.test.sbt.job.writer.ItemWriteListenerAnnotations"/>

    <bean id="skipListenerInterface" class="com.test.sbt.job.step.SkipListenerInterface"/>

    <bean id="skipListenerAnnotations" class="com.test.sbt.job.step.SkipListenerAnnotations"/>


    <!-- Steps -->
    <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource">
            <bean class="org.springframework.core.io.ClassPathResource">
                <constructor-arg name="path" value="employees.csv"/>
            </bean>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names">
                            <array>
                                <value>firstName</value>
                                <value>lastName</value>
                                <value>salary</value>
                            </array>
                        </property>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="targetType">
                            <bean class="java.lang.Class" factory-method="forName">
                                <constructor-arg value="com.test.sbt.model.Employee"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="itemProcessor" class="com.test.sbt.job.processor.PersonItemProcessor"/>

    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <property name="resource" value="file:target/output.csv"/>
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="firstName,lastName,salary"/>
                    </bean>
                </property>
                <property name="format" value="%s,%s,%-2.0f"/>
            </bean>
        </property>
    </bean>

    <bean id="throwExceptionTasklet1" class="com.test.sbt.job.tasklet.ThrowExceptionTasklet">
        <property name="throwException" value="false"/>
    </bean>

    <bean id="throwExceptionTasklet2" class="com.test.sbt.job.tasklet.ThrowExceptionTasklet">
        <property name="throwException" value="false"/>
    </bean>

    <bean id="decider" class="com.test.sbt.job.DeciderTest">
        <property name="flowExecutionStatus" value="COMPLETED"/>
    </bean>

    <bean id="taskletAdapterTest" class="org.springframework.batch.core.step.tasklet.MethodInvokingTaskletAdapter">
        <property name="targetObject">
            <bean class="com.test.sbt.job.tasklet.TaskletAdapterTest"/>
        </property>
        <property name="targetMethod" value="test"/>
        <property name="arguments">
            <array>
                <value>Tasklet adapter works!</value>
            </array>
        </property>
    </bean>

    <bean id="taskletTest" class="com.test.sbt.job.tasklet.TaskletTest">
        <property name="message" value="Tasklet test."/>
        <property name="callTimes" value="5"/>
    </bean>

    <batch:step id="abstractStep" abstract="true">
        <batch:listeners>
            <batch:listener ref="stepListenerInterface"/>
            <!--<batch:listener ref="stepListenerAnnotations"/>-->
        </batch:listeners>
    </batch:step>

    <batch:step id="chunkAbstractStep" parent="abstractStep" abstract="true">
        <batch:tasklet>
            <batch:chunk commit-interval="2"/>
        </batch:tasklet>
    </batch:step>


    <!-- Job -->
    <batch:job id=" simpleJob">

        <batch:step id="step1" parent="chunkAbstractStep" next="step2">
            <batch:tasklet>
                <batch:chunk reader="itemReader" processor="itemProcessor" writer="itemWriter" skip-limit="100">
                    <batch:skippable-exception-classes>
                        <batch:include class="org.springframework.batch.item.file.FlatFileParseException"/>
                    </batch:skippable-exception-classes>
                    <!--<batch:skippable-exception-classes>-->
                    <!--<batch:include class="java.lang.Exception"/>-->
                    <!--<batch:exclude class="java.io.FileNotFoundException"/>-->
                    <!--</batch:skippable-exception-classes>-->
                </batch:chunk>
            </batch:tasklet>
            <batch:listeners merge="true">
                <!--<batch:listener ref="chunkListenerAnnotations"/>-->
                <batch:listener ref="chunkListenerInterface"/>
                <!--<batch:listener ref="itemReadListenerAnnotations"/>-->
                <batch:listener ref="itemReadListenerInterface"/>
                <!--<batch:listener ref="itemProcessListenerAnnotations"/>-->
                <batch:listener ref="itemProcessListenerInterface"/>
                <!--<batch:listener ref="itemWriteListenerAnnotations"/>-->
                <batch:listener ref="itemWriteListenerInterface"/>
                <!--<batch:listener ref="skipListenerAnnotations"/>-->
                <batch:listener ref="skipListenerInterface"/>
            </batch:listeners>
        </batch:step>

        <batch:step id="step2" parent="abstractStep">
            <batch:tasklet ref="throwExceptionTasklet1"/>
            <batch:end on="FAILED" exit-code="FAILED"/>
            <batch:next on="*" to="step3"/>
            <batch:listeners merge="true">
                <!--<batch:listener ref="chunkListenerAnnotations"/>-->
                <batch:listener ref="chunkListenerInterface"/>
            </batch:listeners>
        </batch:step>

        <batch:step id="step3" parent="abstractStep">
            <batch:tasklet ref="throwExceptionTasklet2"/>
            <batch:fail on="FAILED"/>
            <batch:next on="*" to="decision"/>
            <batch:listeners merge="true">
                <!--<batch:listener ref="chunkListenerAnnotations"/>-->
                <batch:listener ref="chunkListenerInterface"/>
            </batch:listeners>
        </batch:step>

        <batch:decision id="decision" decider="decider">
            <batch:next on="COMPLETED" to="split1"/>
            <batch:fail on="FAILED"/>
        </batch:decision>

        <batch:split id="split1">
            <batch:flow>
                <batch:step id="step4" parent="abstractStep">
                    <batch:tasklet ref="taskletAdapterTest"/>
                    <batch:listeners merge="true">
                        <!--<batch:listener ref="chunkListenerAnnotations"/>-->
                        <batch:listener ref="chunkListenerInterface"/>
                    </batch:listeners>
                </batch:step>
            </batch:flow>
            <batch:flow>
                <batch:step id="step5" parent="abstractStep">
                    <batch:tasklet ref="taskletTest"/>
                    <batch:listeners merge="true">
                        <!--<batch:listener ref="chunkListenerAnnotations"/>-->
                        <batch:listener ref="chunkListenerInterface"/>
                    </batch:listeners>
                </batch:step>
            </batch:flow>
        </batch:split>

        <batch:listeners>
            <!--<batch:listener ref="jobListenerAnnotations"/>-->
            <batch:listener ref="jobListenerInterface"/>
        </batch:listeners>
    </batch:job>
</beans>